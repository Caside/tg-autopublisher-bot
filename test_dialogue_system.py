#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã –¥–∏–∞–ª–æ–≥–æ–≤ –º—ã—Å–ª–∏—Ç–µ–ª–µ–π.
–ü–æ–∑–≤–æ–ª—è–µ—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –±–µ–∑ –∑–∞–ø—É—Å–∫–∞ –ø–æ–ª–Ω–æ–≥–æ –±–æ—Ç–∞.
"""

import asyncio
import logging
from config import DEEPSEEK_API_KEY
from deepseek_client import DeepSeekClient
from mode_config import set_mode, PostMode, get_mode_info
from philosophers import get_philosopher_names, PHILOSOPHERS

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

async def test_classic_mode():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π —Ä–µ–∂–∏–º."""
    print("\nüèõÔ∏è === –¢–ï–°–¢ –ö–õ–ê–°–°–ò–ß–ï–°–ö–û–ì–û –†–ï–ñ–ò–ú–ê ===")
    
    set_mode(PostMode.CLASSIC)
    mode_info = get_mode_info()
    print(f"–†–µ–∂–∏–º: {mode_info['name']}")
    
    client = DeepSeekClient()
    
    try:
        result = await client.generate_post("—Ü–∏—Ñ—Ä–æ–≤–æ–µ –æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–æ")
        if result[0]:  # post_text
            print(f"‚úÖ –ü–æ—Å—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω (–¥–ª–∏–Ω–∞: {len(result[0])} —Å–∏–º–≤–æ–ª–æ–≤)")
            print(f"–¢–µ–º–∞: {result[2]}")
            print(f"–§–æ—Ä–º–∞—Ç: {result[3]}")
            print("\n–¢–µ–∫—Å—Ç –ø–æ—Å—Ç–∞:")
            print(result[0])
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å—Ç")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

async def test_dialogue_mode():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–µ–∂–∏–º –¥–∏–∞–ª–æ–≥–æ–≤."""
    print("\nüí≠ === –¢–ï–°–¢ –†–ï–ñ–ò–ú–ê –î–ò–ê–õ–û–ì–û–í ===")
    
    set_mode(PostMode.DIALOGUE)
    mode_info = get_mode_info()
    print(f"–†–µ–∂–∏–º: {mode_info['name']}")
    
    client = DeepSeekClient()
    
    try:
        result = await client.generate_post("—Å—Ç—Ä–∞—Ö –±—É–¥—É—â–µ–≥–æ")
        if result[0]:  # post_text
            print(f"‚úÖ –î–∏–∞–ª–æ–≥ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω (–¥–ª–∏–Ω–∞: {len(result[0])} —Å–∏–º–≤–æ–ª–æ–≤)")
            print(f"–¢–µ–º–∞: {result[2]}")
            print(f"–§–æ—Ä–º–∞—Ç: {result[3]}")
            print("\n–¢–µ–∫—Å—Ç –¥–∏–∞–ª–æ–≥–∞:")
            print(result[0])
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –¥–∏–∞–ª–æ–≥")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

async def test_dialogue_system_directly():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–∏—Å—Ç–µ–º—É –¥–∏–∞–ª–æ–≥–æ–≤ –Ω–∞–ø—Ä—è–º—É—é."""
    print("\nüé≠ === –ü–†–Ø–ú–û–ô –¢–ï–°–¢ –°–ò–°–¢–ï–ú–´ –î–ò–ê–õ–û–ì–û–í ===")
    
    client = DeepSeekClient()
    dialogue_system = client.get_dialogue_system()
    
    try:
        dialogue = await dialogue_system.create_full_dialogue("—ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –≤—ã–≥–æ—Ä–∞–Ω–∏–µ")
        
        if dialogue:
            print(f"‚úÖ –î–∏–∞–ª–æ–≥ —Å–æ–∑–¥–∞–Ω –º–µ–∂–¥—É: {dialogue['participants']}")
            print(f"–¢–µ–º–∞: {dialogue['theme']}")
            print(f"–£—á–∞—Å—Ç–Ω–∏–∫–∏: {[PHILOSOPHERS[p]['name'] for p in dialogue['participants']]}")
            
            print("\n--- –í–≤–µ–¥–µ–Ω–∏–µ ---")
            print(dialogue['opening'])
            
            print("\n--- –î–∏–∞–ª–æ–≥ ---")
            for i, exchange in enumerate(dialogue['exchanges']):
                speaker_name = PHILOSOPHERS[exchange['speaker']]['name']
                print(f"\n{speaker_name}:")
                print(exchange['text'])
            
            print("\n--- –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –¥–ª—è Telegram ---")
            formatted = dialogue_system.format_dialogue_for_telegram(dialogue)
            print(formatted)
            
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –¥–∏–∞–ª–æ–≥")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

async def test_philosophers_info():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º—ã—Å–ª–∏—Ç–µ–ª—è—Ö."""
    print("\nüß† === –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ú–´–°–õ–ò–¢–ï–õ–Ø–• ===")
    
    for key in get_philosopher_names():
        philosopher = PHILOSOPHERS[key]
        emoji = {
            'stoic': 'üèõÔ∏è',
            'existentialist': 'üåä', 
            'zen_master': 'üçÉ',
            'cynic': '‚ö°',
            'mystic': '‚ú®'
        }.get(key, 'üß†')
        
        print(f"\n{emoji} {philosopher['name']}")
        print(f"–®–∫–æ–ª–∞: {philosopher['school']}")
        print(f"–ü–æ–¥—Ö–æ–¥: {philosopher['approach']}")
        print(f"–ü—Ä–∏–º–µ—Ä—ã —Ñ—Ä–∞–∑: {', '.join(philosopher['typical_phrases'][:2])}")

async def test_multiple_dialogues():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –¥–∏–∞–ª–æ–≥–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è."""
    print("\nüîÑ === –¢–ï–°–¢ –ú–ù–û–ñ–ï–°–¢–í–ï–ù–ù–´–• –î–ò–ê–õ–û–ì–û–í ===")
    
    set_mode(PostMode.DIALOGUE)
    client = DeepSeekClient()
    dialogue_system = client.get_dialogue_system()
    
    themes = ["–æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–æ", "—Å–≤–æ–±–æ–¥–∞ –≤—ã–±–æ—Ä–∞", "—Å–º—ã—Å–ª –∂–∏–∑–Ω–∏"]
    
    for i, theme in enumerate(themes, 1):
        print(f"\n--- –î–∏–∞–ª–æ–≥ {i}: {theme} ---")
        try:
            dialogue = await dialogue_system.create_full_dialogue(theme)
            if dialogue:
                participants = [PHILOSOPHERS[p]['name'] for p in dialogue['participants']]
                print(f"–£—á–∞—Å—Ç–Ω–∏–∫–∏: {' –∏ '.join(participants)}")
                print(f"–î–ª–∏–Ω–∞ —Ç–µ–∫—Å—Ç–∞: {len(dialogue_system.format_dialogue_for_telegram(dialogue))} —Å–∏–º–≤–æ–ª–æ–≤")
            else:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –¥–∏–∞–ª–æ–≥")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    try:
        stats = dialogue_system.get_dialogue_stats()
        print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"–í—Å–µ–≥–æ –¥–∏–∞–ª–æ–≥–æ–≤: {stats['total']}")
        print(f"–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –º—ã—Å–ª–∏—Ç–µ–ª–µ–π: {stats['active_philosophers']}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è."""
    print("üöÄ === –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–ò–°–¢–ï–ú–´ –î–ò–ê–õ–û–ì–û–í –ú–´–°–õ–ò–¢–ï–õ–ï–ô ===")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ API –∫–ª—é—á–∞
    if not DEEPSEEK_API_KEY or DEEPSEEK_API_KEY == "your_deepseek_api_key_here":
        print("‚ùå DeepSeek API –∫–ª—é—á –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
        print("–î–æ–±–∞–≤—å—Ç–µ DEEPSEEK_API_KEY –≤ —Ñ–∞–π–ª .env")
        return
    
    print(f"‚úÖ API –∫–ª—é—á –Ω–∞—Å—Ç—Ä–æ–µ–Ω: {DEEPSEEK_API_KEY[:10]}...")
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º—ã—Å–ª–∏—Ç–µ–ª—è—Ö
    await test_philosophers_info()
    
    # –¢–µ—Å—Ç –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–≥–æ —Ä–µ–∂–∏–º–∞
    await test_classic_mode()
    
    # –¢–µ—Å—Ç —Ä–µ–∂–∏–º–∞ –¥–∏–∞–ª–æ–≥–æ–≤
    await test_dialogue_mode()
    
    # –ü—Ä—è–º–æ–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –¥–∏–∞–ª–æ–≥–æ–≤
    await test_dialogue_system_directly()
    
    # –¢–µ—Å—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤
    await test_multiple_dialogues()
    
    print("\n‚úÖ === –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û ===")

if __name__ == "__main__":
    asyncio.run(main()) 