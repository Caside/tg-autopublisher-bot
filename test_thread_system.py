#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã —Ü–µ–ø–æ—á–µ–∫ –¥–∏–∞–ª–æ–≥–æ–≤.
–ü–æ–∑–≤–æ–ª—è–µ—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤-–æ—Ç–≤–µ—Ç–æ–≤.
"""

import asyncio
import logging
from config import DEEPSEEK_API_KEY
from deepseek_client import DeepSeekClient
from mode_config import set_mode, PostMode, get_mode_info
from philosophers import get_philosopher_names, PHILOSOPHERS

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

async def test_thread_system_basics():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –±–∞–∑–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã —Ü–µ–ø–æ—á–µ–∫."""
    print("\nüßµ === –¢–ï–°–¢ –°–ò–°–¢–ï–ú–´ –¶–ï–ü–û–ß–ï–ö ===")
    
    set_mode(PostMode.THREADS)
    mode_info = get_mode_info()
    print(f"–†–µ–∂–∏–º: {mode_info['name']}")
    
    client = DeepSeekClient()
    thread_system = client.get_thread_system()
    
    try:
        # –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä–≤–æ–≥–æ –ø–æ—Å—Ç–∞ (—Å—Ç–∞—Ä—Ç–µ—Ä)
        print("\n--- –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞ ---")
        post = await thread_system.generate_next_post("—Ü–∏—Ñ—Ä–æ–≤–∞—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å")
        
        if post:
            print(f"‚úÖ –°—Ç–∞—Ä—Ç–æ–≤—ã–π –ø–æ—Å—Ç —Å–æ–∑–¥–∞–Ω")
            print(f"–¢–∏–ø: {post['type']}")
            print(f"–ú—ã—Å–ª–∏—Ç–µ–ª—å: {PHILOSOPHERS[post['philosopher']]['name']}")
            print(f"–¢–µ–º–∞: {post['theme']}")
            print(f"ID —Ü–µ–ø–æ—á–∫–∏: {post['thread_id']}")
            print(f"\n–¢–µ–∫—Å—Ç –ø–æ—Å—Ç–∞:")
            print(post['formatted_content'])
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å—Ç–∞—Ä—Ç–æ–≤—ã–π –ø–æ—Å—Ç")
            return
        
        # –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–Ω–æ–≥–æ –ø–æ—Å—Ç–∞
        print("\n--- –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–Ω–æ–≥–æ –ø–æ—Å—Ç–∞ ---")
        response_post = await thread_system.generate_next_post()
        
        if response_post:
            print(f"‚úÖ –û—Ç–≤–µ—Ç–Ω—ã–π –ø–æ—Å—Ç —Å–æ–∑–¥–∞–Ω")
            print(f"–¢–∏–ø: {response_post['type']}")
            print(f"–ú—ã—Å–ª–∏—Ç–µ–ª—å: {PHILOSOPHERS[response_post['philosopher']]['name']}")
            print(f"–ù–æ–º–µ—Ä –ø–æ—Å—Ç–∞: {response_post.get('post_number', 'N/A')}")
            print(f"\n–¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞:")
            print(response_post['formatted_content'])
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –æ—Ç–≤–µ—Ç–Ω—ã–π –ø–æ—Å—Ç")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        print("\n--- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ü–µ–ø–æ—á–µ–∫ ---")
        stats = thread_system.get_system_stats()
        print(f"–ê–∫—Ç–∏–≤–Ω—ã—Ö —Ü–µ–ø–æ—á–µ–∫: {stats['active_threads']}")
        print(f"–í—Å–µ–≥–æ –ø–æ—Å—Ç–æ–≤: {stats['total_posts']}")
        print(f"–ê–∫—Ç–∏–≤–Ω—ã–µ —Ç–µ–º—ã: {stats['active_themes']}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

async def test_multiple_threads():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ü–µ–ø–æ—á–µ–∫ –¥–∏–∞–ª–æ–≥–æ–≤."""
    print("\nüîÑ === –¢–ï–°–¢ –ú–ù–û–ñ–ï–°–¢–í–ï–ù–ù–´–• –¶–ï–ü–û–ß–ï–ö ===")
    
    set_mode(PostMode.THREADS)
    client = DeepSeekClient()
    thread_system = client.get_thread_system()
    
    themes = ["–æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–æ –≤ –≥–æ—Ä–æ–¥–µ", "–∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç", "—Å–º—ã—Å–ª —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞"]
    
    for i, theme in enumerate(themes, 1):
        print(f"\n--- –¶–µ–ø–æ—á–∫–∞ {i}: {theme} ---")
        try:
            post = await thread_system.generate_next_post(theme)
            if post:
                philosopher_name = PHILOSOPHERS[post['philosopher']]['name']
                print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ü–µ–ø–æ—á–∫–∞ –æ—Ç {philosopher_name}")
                print(f"–î–ª–∏–Ω–∞ –ø–æ—Å—Ç–∞: {len(post['formatted_content'])} —Å–∏–º–≤–æ–ª–æ–≤")
            else:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ü–µ–ø–æ—á–∫—É")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    try:
        stats = thread_system.get_system_stats()
        print(f"\nüìä –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"–ê–∫—Ç–∏–≤–Ω—ã—Ö —Ü–µ–ø–æ—á–µ–∫: {stats['active_threads']}")
        print(f"–í—Å–µ–≥–æ —Ü–µ–ø–æ—á–µ–∫: {stats['total_threads']}")
        print(f"–í—Å–µ–≥–æ –ø–æ—Å—Ç–æ–≤: {stats['total_posts']}")
        print(f"–£—á–∞—Å—Ç–Ω–∏–∫–∏: {[PHILOSOPHERS[p]['name'] for p in stats['active_participants']]}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")

async def test_conversation_flow():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π –ø–æ—Ç–æ–∫ –¥–∏–∞–ª–æ–≥–∞ —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –æ—Ç–≤–µ—Ç–∞–º–∏."""
    print("\nüí¨ === –¢–ï–°–¢ –ü–û–¢–û–ö–ê –î–ò–ê–õ–û–ì–ê ===")
    
    set_mode(PostMode.THREADS)
    client = DeepSeekClient()
    thread_system = client.get_thread_system()
    
    # –°–æ–∑–¥–∞–µ–º —Å—Ç–∞—Ä—Ç–æ–≤—ã–π –ø–æ—Å—Ç
    print("–°–æ–∑–¥–∞–µ–º —Å—Ç–∞—Ä—Ç–æ–≤—ã–π –ø–æ—Å—Ç...")
    starter_post = await thread_system.generate_next_post("–ø—Ä–∏—Ä–æ–¥–∞ –≤—Ä–µ–º–µ–Ω–∏")
    
    if not starter_post:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å—Ç–∞—Ä—Ç–æ–≤—ã–π –ø–æ—Å—Ç")
        return
    
    print(f"‚úÖ –°—Ç–∞—Ä—Ç–æ–≤—ã–π –ø–æ—Å—Ç –æ—Ç {PHILOSOPHERS[starter_post['philosopher']]['name']}")
    
    # –°–æ–∑–¥–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ—Ç–≤–µ—Ç–æ–≤
    for i in range(3):
        print(f"\n–°–æ–∑–¥–∞–µ–º –æ—Ç–≤–µ—Ç #{i+1}...")
        response_post = await thread_system.generate_next_post()
        
        if response_post and response_post['type'] == 'response':
            philosopher_name = PHILOSOPHERS[response_post['philosopher']]['name']
            print(f"‚úÖ –û—Ç–≤–µ—Ç #{response_post['post_number']} –æ—Ç {philosopher_name}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫—Ä–∞—Ç–∫–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
            if 'context' in response_post:
                context_lines = response_post['context'].split('\n')[:2]
                print(f"–ö–æ–Ω—Ç–µ–∫—Å—Ç: {context_lines[0][:100]}...")
        else:
            print(f"‚ö†Ô∏è –ü–æ–ø—ã—Ç–∫–∞ #{i+1}: —Å–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π —Å—Ç–∞—Ä—Ç–æ–≤—ã–π –ø–æ—Å—Ç –≤–º–µ—Å—Ç–æ –æ—Ç–≤–µ—Ç–∞")
            if response_post:
                print(f"–û—Ç {PHILOSOPHERS[response_post['philosopher']]['name']} –Ω–∞ —Ç–µ–º—É '{response_post['theme']}'")
    
    # –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ü–µ–ø–æ—á–∫–∏
    stats = thread_system.get_system_stats()
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç:")
    print(f"–ê–∫—Ç–∏–≤–Ω—ã—Ö —Ü–µ–ø–æ—á–µ–∫: {stats['active_threads']}")
    print(f"–í—Å–µ–≥–æ –ø–æ—Å—Ç–æ–≤ –≤ —Å–µ—Å—Å–∏–∏: {stats['total_posts']}")

async def test_thread_vs_dialogue_modes():
    """–°—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç —Ä–µ–∂–∏–º—ã —Ü–µ–ø–æ—á–µ–∫ –∏ –æ–±—ã—á–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤."""
    print("\n‚öñÔ∏è === –°–†–ê–í–ù–ï–ù–ò–ï –†–ï–ñ–ò–ú–û–í ===")
    
    client = DeepSeekClient()
    theme = "—Å–≤–æ–±–æ–¥–∞ –∏ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å"
    
    # –¢–µ—Å—Ç —Ä–µ–∂–∏–º–∞ —Ü–µ–ø–æ—á–µ–∫
    print("--- –†–µ–∂–∏–º —Ü–µ–ø–æ—á–µ–∫ ---")
    set_mode(PostMode.THREADS)
    try:
        thread_result = await client.generate_post(theme)
        if thread_result[0]:
            print(f"‚úÖ –¶–µ–ø–æ—á–∫–∞: {thread_result[3]} - {len(thread_result[0])} —Å–∏–º–≤–æ–ª–æ–≤")
            print(f"–ü–µ—Ä–≤—ã–µ 100 —Å–∏–º–≤–æ–ª–æ–≤: {thread_result[0][:100]}...")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–æ—Å—Ç —Ü–µ–ø–æ—á–∫–∏")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ä–µ–∂–∏–º–µ —Ü–µ–ø–æ—á–µ–∫: {e}")
    
    # –¢–µ—Å—Ç —Ä–µ–∂–∏–º–∞ –¥–∏–∞–ª–æ–≥–æ–≤
    print("\n--- –†–µ–∂–∏–º –¥–∏–∞–ª–æ–≥–æ–≤ ---")
    set_mode(PostMode.DIALOGUE)
    try:
        dialogue_result = await client.generate_post(theme)
        if dialogue_result[0]:
            print(f"‚úÖ –î–∏–∞–ª–æ–≥: {dialogue_result[3]} - {len(dialogue_result[0])} —Å–∏–º–≤–æ–ª–æ–≤")
            print(f"–ü–µ—Ä–≤—ã–µ 100 —Å–∏–º–≤–æ–ª–æ–≤: {dialogue_result[0][:100]}...")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –¥–∏–∞–ª–æ–≥")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ä–µ–∂–∏–º–µ –¥–∏–∞–ª–æ–≥–æ–≤: {e}")
    
    # –¢–µ—Å—Ç –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–≥–æ —Ä–µ–∂–∏–º–∞
    print("\n--- –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π —Ä–µ–∂–∏–º ---")
    set_mode(PostMode.CLASSIC)
    try:
        classic_result = await client.generate_post(theme)
        if classic_result[0]:
            print(f"‚úÖ –ö–ª–∞—Å—Å–∏–∫–∞: {classic_result[3]} - {len(classic_result[0])} —Å–∏–º–≤–æ–ª–æ–≤")
            print(f"–ü–µ—Ä–≤—ã–µ 100 —Å–∏–º–≤–æ–ª–æ–≤: {classic_result[0][:100]}...")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –ø–æ—Å—Ç")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–º —Ä–µ–∂–∏–º–µ: {e}")

async def test_thread_persistence():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ—Å—Ç–æ—è–Ω—Å—Ç–≤–æ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ü–µ–ø–æ—á–∫–∞–º–∏."""
    print("\nüíæ === –¢–ï–°–¢ –ü–û–°–¢–û–Ø–ù–°–¢–í–ê –¶–ï–ü–û–ß–ï–ö ===")
    
    set_mode(PostMode.THREADS)
    client = DeepSeekClient()
    thread_system = client.get_thread_system()
    
    # –°–æ–∑–¥–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ü–µ–ø–æ—á–µ–∫
    themes = ["–≤—Ä–µ–º—è", "–ø–∞–º—è—Ç—å", "–∏–¥–µ–Ω—Ç–∏—á–Ω–æ—Å—Ç—å"]
    created_threads = []
    
    for theme in themes:
        post = await thread_system.generate_next_post(theme)
        if post:
            created_threads.append(post['thread_id'])
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ü–µ–ø–æ—á–∫–∞ {post['thread_id']} –Ω–∞ —Ç–µ–º—É '{theme}'")
    
    print(f"\n–°–æ–∑–¥–∞–Ω–æ —Ü–µ–ø–æ—á–µ–∫: {len(created_threads)}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ü–µ–ø–æ—á–µ–∫
    print("\n–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ —Ü–µ–ø–æ—á–µ–∫...")
    for i in range(5):
        post = await thread_system.generate_next_post()
        if post:
            if post['type'] == 'response':
                print(f"‚úÖ –û—Ç–≤–µ—Ç –≤ —Ü–µ–ø–æ—á–∫–µ {post['thread_id']} (–ø–æ—Å—Ç #{post['post_number']})")
            else:
                print(f"‚úÖ –ù–æ–≤–∞—è —Ü–µ–ø–æ—á–∫–∞ {post['thread_id']} –Ω–∞ —Ç–µ–º—É '{post['theme']}'")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ—Å—Ç–∞ #{i+1}")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    stats = thread_system.get_system_stats()
    print(f"\nüìä –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"–ê–∫—Ç–∏–≤–Ω—ã—Ö —Ü–µ–ø–æ—á–µ–∫: {stats['active_threads']}")
    print(f"–í—Å–µ–≥–æ —Ü–µ–ø–æ—á–µ–∫: {stats['total_threads']}")
    print(f"–í—Å–µ–≥–æ –ø–æ—Å—Ç–æ–≤: {stats['total_posts']}")

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è."""
    print("üöÄ === –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–ò–°–¢–ï–ú–´ –¶–ï–ü–û–ß–ï–ö –î–ò–ê–õ–û–ì–û–í ===")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ API –∫–ª—é—á–∞
    if not DEEPSEEK_API_KEY or DEEPSEEK_API_KEY == "your_deepseek_api_key_here":
        print("‚ùå DeepSeek API –∫–ª—é—á –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
        print("–î–æ–±–∞–≤—å—Ç–µ DEEPSEEK_API_KEY –≤ —Ñ–∞–π–ª .env")
        return
    
    print(f"‚úÖ API –∫–ª—é—á –Ω–∞—Å—Ç—Ä–æ–µ–Ω: {DEEPSEEK_API_KEY[:10]}...")
    
    # –ë–∞–∑–æ–≤—ã–µ —Ç–µ—Å—Ç—ã
    await test_thread_system_basics()
    
    # –¢–µ—Å—Ç—ã –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ü–µ–ø–æ—á–µ–∫
    await test_multiple_threads()
    
    # –¢–µ—Å—Ç –ø–æ—Ç–æ–∫–∞ –¥–∏–∞–ª–æ–≥–∞
    await test_conversation_flow()
    
    # –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ä–µ–∂–∏–º–æ–≤
    await test_thread_vs_dialogue_modes()
    
    # –¢–µ—Å—Ç –ø–æ—Å—Ç–æ—è–Ω—Å—Ç–≤–∞
    await test_thread_persistence()
    
    print("\n‚úÖ === –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û ===")

if __name__ == "__main__":
    asyncio.run(main()) 